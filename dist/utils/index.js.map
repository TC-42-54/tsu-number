{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/utils/index.ts"],"names":[],"mappings":";;;;AAAA,4DAA4B;AAC5B,0BAA8B;AACvB,MAAM,WAAW,GAAG,CAAC,KAAc,EAAE,EAAE;IAC5C,OAAO,IAAA,YAAQ,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;AACzC,CAAC,CAAC;AAFW,QAAA,WAAW,eAEtB;AACK,MAAM,YAAY,GAAG,CAC1B,GAAG,GAAG,CAAC,EACP,GAAW,EACX,aAAuB,EACf,EAAE;IACV,IAAI,SAAS,GAAG,gBAAM,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAE3C,OAAO,aAAa,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,CAAC;QACzC,SAAS,GAAG,gBAAM,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACzC,CAAC;IAED,OAAO,SAAS,CAAC;AACnB,CAAC,CAAC;AAZW,QAAA,YAAY,gBAYvB","sourcesContent":["import crypto from 'crypto';\nimport { isNumber } from '..';\nexport const parseNumber = (value: unknown) => {\n  return isNumber(value) ? +value : null;\n};\nexport const getRandomInt = (\n  min = 0,\n  max: number,\n  excludeValues: number[],\n): number => {\n  let randomInt = crypto.randomInt(min, max);\n\n  while (excludeValues.includes(randomInt)) {\n    randomInt = crypto.randomInt(min, max);\n  }\n\n  return randomInt;\n};\n"]}